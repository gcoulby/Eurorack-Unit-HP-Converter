{"version":3,"sources":["logo.svg","components/convertor.jsx","App.js","reportWebVitals.js","index.js"],"names":["HP_W","U_H","Convertor","state","hp","hp_mm","hp_in","u","u_mm","u_in","handleOnHpChange","evt","setState","target","value","toFixed","handleOnHpMmChange","Math","ceil","handleOnHpInChange","handleOnUChange","handleOnUMmChange","handleOnUInChange","Fragment","className","Container","Tabs","defaultActiveKey","id","Tab","eventKey","title","Form","Group","controlId","Label","Control","type","placeholder","min","this","onChange","e","Text","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4a94d5e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport { Button, Form, FormControl, Tabs, Tab, Container } from 'react-bootstrap';\r\n\r\nconst HP_W = 5.08;\r\nconst U_H = 44.45;\r\n\r\nclass Convertor extends Component {\r\n    state = { \r\n        hp: 0,\r\n        hp_mm: 0,\r\n        hp_in: 0,\r\n        u: 3,\r\n        u_mm: 133.35,\r\n        u_in: 5.25,\r\n     }\r\n\r\n     handleOnHpChange = (evt) =>{\r\n        this.setState({hp: evt.target.value});\r\n        const hp_mm = (evt.target.value * HP_W).toFixed(2);\r\n        const hp_in = (evt.target.value * HP_W / 25.4).toFixed(2);\r\n        this.setState({hp_mm});\r\n        this.setState({hp_in});\r\n    }\r\n\r\n    handleOnHpMmChange = (evt) =>{\r\n        this.setState({hp_mm: evt.target.value});\r\n        const hp = Math.ceil(evt.target.value / HP_W);\r\n        const hp_in = (evt.target.value / 25.4).toFixed(2);\r\n        this.setState({hp});\r\n        this.setState({hp_in});\r\n    }\r\n\r\n    handleOnHpInChange = (evt) =>{\r\n        this.setState({hp_in: evt.target.value});\r\n        const hp = Math.ceil(evt.target.value / HP_W);\r\n        const hp_mm = (evt.target.value * 25.4).toFixed(2);\r\n        this.setState({hp});\r\n        this.setState({hp_mm});\r\n    }\r\n\r\n    handleOnUChange = (evt) =>{\r\n        this.setState({u: evt.target.value});\r\n        const u_mm = (evt.target.value * U_H).toFixed(2);\r\n        const u_in = (evt.target.value * U_H / 25.4).toFixed(2);\r\n        this.setState({u_mm});\r\n        this.setState({u_in});\r\n    }\r\n\r\n    handleOnUMmChange = (evt) =>{\r\n        this.setState({u_mm: evt.target.value});\r\n        const u = Math.ceil(evt.target.value / U_H);\r\n        const u_in = (evt.target.value / 25.4).toFixed(2);\r\n        this.setState({u});\r\n        this.setState({u_in});\r\n    }\r\n\r\n    handleOnUInChange = (evt) =>{\r\n        this.setState({hp_in: evt.target.value});\r\n        const u = Math.ceil(evt.target.value / U_H);\r\n        const u_mm = (evt.target.value * 25.4).toFixed(2);\r\n        this.setState({u});\r\n        this.setState({u_mm});\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"bg-dark text-light p-3 mb-4\">\r\n                    <h1>Eurorack Unit/HP Convertor</h1>\r\n                </div>\r\n                <Container>\r\n                <Tabs defaultActiveKey=\"HP\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n                    <Tab eventKey=\"HP\" title=\"HP\">\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formHp\">\r\n                                <Form.Label>Horizontal Pitch</Form.Label>\r\n                                <Form.Control type=\"number\" placeholder=\"\" min=\"0\" value={this.state.hp} onChange={e => this.handleOnHpChange(e)}/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    The number of Horizontal Pitch Units\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formHpMm\">\r\n                                <Form.Label>Millimeters</Form.Label>\r\n                                <Form.Control type=\"number\" min=\"0\" placeholder=\"\" value={this.state.hp_mm} onChange={e => this.handleOnHpMmChange(e)}/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Width in Millimeters\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formHpIn\">\r\n                                <Form.Label>Inches</Form.Label>\r\n                                <Form.Control type=\"number\" min=\"0\" placeholder=\"\" value={this.state.hp_in} onChange={e => this.handleOnHpInChange(e)}/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Width in Inches\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                        </Form>\r\n\r\n                    </Tab>\r\n                    <Tab eventKey=\"Units\" title=\"Units\">\r\n                        <Form>\r\n                            <Form.Group className=\"mb-3\" controlId=\"formU\">\r\n                                <Form.Label>Eurorack Units</Form.Label>\r\n                                <Form.Control type=\"number\" placeholder=\"\" min=\"0\" value={this.state.u} onChange={e => this.handleOnUChange(e)}/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    The number of Horizontal Pitch Units\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formUMm\">\r\n                                <Form.Label>Millimeters</Form.Label>\r\n                                <Form.Control type=\"number\" min=\"0\" placeholder=\"\" value={this.state.u_mm} onChange={e => this.handleOnUMmChange(e)}/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Width in Millimeters\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" controlId=\"formUIn\">\r\n                                <Form.Label>Inches</Form.Label>\r\n                                <Form.Control type=\"number\" min=\"0\" placeholder=\"\" value={this.state.u_in} onChange={e => this.handleOnUInChange(e)}/>\r\n                                <Form.Text className=\"text-muted\">\r\n                                    Width in Inches\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </Tab>\r\n                </Tabs>\r\n                </Container>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Convertor;","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Convertor from './components/convertor';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Convertor />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}